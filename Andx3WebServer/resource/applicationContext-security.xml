<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns="http://www.springframework.org/schema/security"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
             xsi:schemaLocation="  http://www.springframework.org/schema/beans
                                   http://www.springframework.org/schema/beans/spring-beans.xsd
                                   http://www.springframework.org/schema/security/oauth2
                                   http://www.springframework.org/schema/security/spring-security-oauth2.xsd
                                   http://www.springframework.org/schema/security
                                   http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <beans:bean id="loginSuccessHandler" class="com.palm.epalm.base.web.security.LoginSuccessHandler"/>
    <beans:bean id="loginFailureHandler" class="com.palm.epalm.base.web.security.LoginFailureHandler"/>

    <beans:bean id="authenticationEntryPoint" class="com.palm.epalm.base.web.security.AuthenticationEntryPoint">
        <beans:constructor-arg value="/login.jsp"/>
    </beans:bean>
    <!--<beans:bean id="filter" class="com.palm.epalm.base.web.security.AdvancePerRequestFilter"/> -->
    <!--<global-method-security secured-annotations="enabled"/>  -->
    <!--<http pattern="/static/**" security="none" once-per-request="true"/>-->
    <!--根据表达式和认证用户拦截
    <beans:bean id="patternFilter" class="com.palm.epalm.base.web.security.PatternAccessFilter">
        <beans:property name="pattern" value="/account/users/{username}/personal/*"/>
        <beans:property name="access" value="#principal != null and #username == #principal.name"/>
    </beans:bean> -->
    <!--
    <beans:bean id="digestFilter"
                class="org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
        <beans:property name="userDetailsService" ref="userService" />
        <beans:property name="authenticationEntryPoint" ref="digestEntryPoint" />
    </beans:bean> -->
    <beans:bean id="digestEntryPoint"
                class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
        <beans:property name="realmName" value="palmluck"/>
        <beans:property name="key" value="acegi"/>
    </beans:bean>

    <http auto-config="true" use-expressions="true" once-per-request="true"
          entry-point-ref="authenticationEntryPoint">
        <!-- entry-point-ref="digestEntryPoint" entry-point-ref="authenticationEntryPoint">  -->
        <!-- org.springframework.security.access.expression.SecurityExpressionRoot
        <intercept-url pattern="/static/**" access="permitAll()"/>
        <intercept-url pattern="/login*" access="permitAll()"/>
        <intercept-url pattern="/register*" access="permitAll()"/>
        <intercept-url pattern="/message/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
        <intercept-url pattern="/" access="permitAll()"/>
        <intercept-url pattern="/test/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/> -->
        <intercept-url pattern="/message/**" access="hasRole('ROLE_USER')"/>

        <!--<custom-filter ref="digestFilter" after="BASIC_AUTH_FILTER" />-->
        <!--  -->
        <form-login login-page="/login" login-processing-url="/user_login"
                    authentication-failure-url="/" default-target-url="/"
                    authentication-success-handler-ref="loginSuccessHandler"
                    authentication-failure-handler-ref="loginFailureHandler"/>

        <logout logout-success-url="/" invalidate-session="true" logout-url="/logout" delete-cookies="JSESSIONID"/>
        <!--  -->
        <remember-me user-service-ref="userService" data-source-ref="dataSource"/>
        <http-basic/>
        <!--<remember-me key="jdbc_rember"/>-->
        <!--
        <session-management session-fixation-protection="newSession">
            <concurrency-control error-if-maximum-exceeded="true"/>
        </session-management>
        -->
        <anonymous/>
    </http>
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userService">
            <!--
            <password-encoder hash="md5">
                <salt-source user-property="username"/>
            </password-encoder>
            -->
            <!--
            <jdbc-user-service photoData-source-ref="dataSource"
                               users-by-username-query="select login_name,password,enable from sys_user where login_name = ? and enable = 1 "/>
            -->
        </authentication-provider>
    </authentication-manager>
    <!--
    <oauth:client id="oauth2ClientFilter"/>
    <oauth:resource id="baidu" client-id="pMu4ibqrtW04qt3bAtLpyjyG" token-name="access_token" scope="basic"
                   client-secret="6o0YVfqLUj5embRe3vQXOiPXFfdKGLUh"
                   access-token-uri="https://openapi.baidu.com/oauth/2.0/token"
                   user-authorization-uri="https://openapi.baidu.com/oauth/2.0/authorize"/> -->

</beans:beans>